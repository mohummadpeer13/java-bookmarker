name: Java CI with Maven

on:
  push:
    paths:
      - "bookmarker-api/**"
    branches: [ "main" ]
  pull_request:
    paths:
      - "bookmarker-api/**"
    branches: [ "main" ]

jobs:
  # Etape 1 : build project bookmarker-api and share image on dockerhub
  build-bookmarker-api:
    name: Build bookmarker-api
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./bookmarker-api

    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'
        cache: maven

    - name: Build with Maven
      run: ./mvnw clean package -DskipTests

    - if: ${{ github.ref == 'refs/heads/main' }}
      name: Docker Image - Build and Publish 
      run: |
        ./mvnw clean package jib:dockerBuild -DskipTests
        docker login --username=${{ secrets.DOCKER_USERNAME }} --password ${{ secrets.DOCKER_PASSWORD }} 
        docker push ${{ secrets.DOCKER_USERNAME }}/bookmarker-api

  # Etape 2 : connect ssh on VM and execute script kubernetes
  execute-script:
    name: Execute-script - Configure Kubernetes Backend-Api and Postgresql
    runs-on: ubuntu-latest
  
    # si action build reussi alors execute script
    needs: build-bookmarker-api

    steps:
    - name: Configure Kubernetes Backend-Api and Postgresql Cluster on VM
      uses: appleboy/ssh-action@v1.0.3

      with:
        host: ${{ secrets.OWNHOST }}
        username: ${{ secrets.OWNUSERNAME }}
        password: ${{ secrets.OWNPASSWORD }}
        port: ${{ secrets.OWNPORT }}
        
        # script à exécuter
        script: |
          cd k8s        
          kubectl apply -f 1-postgres-pv.yaml
          kubectl apply -f 2-postgres-pvc.yaml
          kubectl apply -f 3-postgres-config.yaml
          kubectl apply -f 4-postgres-secret.yaml
          kubectl apply -f 5-postgres-deployment.yaml
          kubectl apply -f 6-bookmarker-api.yaml
          kubectl apply -f 8-ingress-api.yaml